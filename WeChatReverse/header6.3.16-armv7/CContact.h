//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CBaseContact.h"

#import "NSCoding.h"
#import "PBCoding.h"

@class ChatRoomData, ChatRoomDetail, NSArray, NSDictionary, NSString, SubscriptBrandInfo;

@interface CContact : CBaseContact <PBCoding, NSCoding>
{
    unsigned long m_uiChatRoomStatus;
    NSString *m_nsChatRoomMemList;
    unsigned long m_uiChatRoomMaxCount;
    unsigned long m_uiChatRoomVersion;
    ChatRoomDetail *m_ChatRoomDetail;
    NSString *m_nsChatRoomData;
    ChatRoomData *m_ChatRoomData;
    NSString *m_nsCountry;
    NSString *m_nsProvince;
    NSString *m_nsCity;
    NSString *m_nsSignature;
    unsigned long m_uiCertificationFlag;
    NSString *m_nsCertificationInfo;
    NSString *m_nsOwner;
    NSString *m_nsWeiboAddress;
    NSString *m_nsWeiboNickName;
    unsigned long m_uiWeiboFlag;
    NSString *m_nsFBNickName;
    NSString *m_nsFBID;
    unsigned long m_uiNeedUpdate;
    NSString *m_nsWCBGImgObjectID;
    int m_iWCFlag;
    NSString *m_pcWCBGImgID;
    NSString *m_nsExternalInfo;
    NSString *m_nsBrandSubscriptConfigUrl;
    unsigned long m_uiBrandSubscriptionSettings;
    SubscriptBrandInfo *m_subBrandInfo;
    NSString *m_nsBrandIconUrl;
    BOOL m_isExtInfoValid;
    NSDictionary *externalInfoJSONCache;
    BOOL m_isShowRedDot;
    NSString *m_nsMobileHash;
    NSString *m_nsMobileFullHash;
    NSString *m_nsLinkedInID;
    NSString *m_nsLinkedInName;
    NSString *m_nsLinkedInPublicUrl;
    unsigned long m_uiDeleteFlag;
    NSString *m_nsDescription;
    NSString *m_nsCardUrl;
    NSString *m_nsWorkID;
    NSString *m_nsLabelIDList;
    NSArray *m_arrPhoneItem;
    NSString *m_nsWeiDianInfo;
    NSDictionary *_m_dicWeiDianInfo;
}

+ (void)HandleChatMemUsrImg:(struct tagMMModChatRoomMember *)arg1 Contatct:(id)arg2 DocPath:(id)arg3;
+ (void)HandleUsrImg:(struct tagMMModContact *)arg1 Contatct:(id)arg2 DocPath:(id)arg3;
+ (void)HandleUsrImgPB:(id)arg1 Contatct:(id)arg2 DocPath:(id)arg3;
+ (id)SubscriptedBrandsFromString:(id)arg1;
+ (id)genChatRoomName:(id)arg1;
+ (id)getChatRoomMember:(id)arg1;
+ (unsigned int)getChatRoomMemberCount:(id)arg1;
+ (id)getChatRoomMemberWithoutMyself:(id)arg1;
+ (id)getMicroBlogUsrDisplayName:(id)arg1;
+ (void)initialize;
+ (BOOL)isHeadImgUpdated:(id)arg1 Local:(id)arg2;
+ (id)parseContactKey:(id)arg1;
- (void).cxx_destruct;
- (BOOL)IsAddFromLbs;
- (BOOL)IsAddFromShake;
- (BOOL)IsUserInChatRoom:(id)arg1;
- (id)bizMenuInfoFromContact;
- (id)brandPrivileges;
- (id)brandUrls;
- (BOOL)canSupportMessageNotify;
- (int)compareForFavourGroup:(id)arg1;
- (BOOL)containKFWorkerInfo;
- (BOOL)copyFieldFromContact:(id)arg1;
- (BOOL)copyPatialFieldFromContact:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)encodeWithCoder:(id)arg1;
- (id)externalInfoJSONCache;
- (BOOL)genContactFromShareCardMsgWrap:(id)arg1;
- (void)genContactFromShareCardMsgWrapContent:(id)arg1;
- (int)getAudioPlayType;
- (id)getBrandBusinessScope;
- (int)getBrandContactType;
- (id)getBrandEvaluateCount;
- (id)getBrandMerchantRatings;
- (id)getBrandMerchantSecurity;
- (id)getBrandMerchantSecurityUrl;
- (id)getBrandRegisterSourceBody;
- (id)getBrandRegisterSourceIntroUrl;
- (id)getBrandTrademarkName;
- (id)getBrandTrademarkUrl;
- (id)getBrandVerifySourceDescription;
- (id)getBrandVerifySourceIntroUrl;
- (id)getBrandVerifySourceName;
- (unsigned long)getBrandVerifySourceType;
- (id)getBrandVerifySubTitle;
- (id)getChatRoomMemberDisplayName:(id)arg1;
- (id)getChatRoomMemberNickName:(id)arg1;
- (id)getChatRoomMembrGroupNickName:(id)arg1;
- (unsigned long)getConferenceContactExpireTime;
- (id)getConferenceVerifyButtonTitle;
- (id)getConferenceVerifyPromptTitle;
- (int)getConnectorMsgType;
- (id)getCustomizeMenu;
- (id)getEnterpriseBrandFrozenWording;
- (id)getEnterpriseMainBrandUserName;
- (unsigned long)getEnterpriseSubBrandChildType;
- (id)getEnterpriseSubBrandUrl;
- (id)getExternalInfoDictionary;
- (unsigned long)getFunctionFlag;
- (int)getInteractiveMode;
- (BOOL)getIsTrademarkProtection;
- (id)getLabelIDList;
- (id)getMainPageUrl;
- (id)getMobileDisplayName;
- (id)getMobileList;
- (id)getMobileNumString;
- (id)getNearFieldDesc;
- (id)getNewChatroomData;
- (id)getNormalContactDisplayDesc;
- (int)getReportLocationType;
- (int)getScanQRCodeType;
- (id)getSpecifyWorkerOpenID;
- (id)getSupportEmoticonLinkPrefix;
- (const map_18e36f99 *)getValueTagIndexMap;
- (id)getValueTypeTable;
- (BOOL)hasMatchHashPhone;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithModContact:(id)arg1;
- (id)initWithShareCardMsgWrap:(id)arg1;
- (id)initWithShareCardMsgWrapContent:(id)arg1;
- (BOOL)isAccountDeleted;
- (BOOL)isAdmin;
- (BOOL)isBrandContact;
- (BOOL)isChatStatusNotifyOpen;
- (BOOL)isContactCanReceiveSpeexVoice;
- (BOOL)isContactFrozen;
- (BOOL)isContactSessionTop;
- (BOOL)isContactTypeShouldDelete;
- (BOOL)isEnterpriseBrand;
- (BOOL)isEnterpriseChatSubBrand;
- (BOOL)isEnterpriseDisableBrand;
- (BOOL)isEnterpriseMainBrand;
- (BOOL)isEnterpriseSubBrand;
- (BOOL)isEnterpriseWebSubBrand;
- (BOOL)isHardDeviceBrand;
- (BOOL)isHardDeviceHideSubtitle;
- (BOOL)isHardDeviceTestBrand;
- (BOOL)isHasMobile;
- (BOOL)isHasWeiDian;
- (BOOL)isHolderContact;
- (BOOL)isIgnoreBrandContat;
- (BOOL)isInternalMyDeviceBrand;
- (BOOL)isInternalSportBrand;
- (BOOL)isLocalizedContact;
- (BOOL)isMyContact;
- (BOOL)isOpenMainPage;
- (BOOL)isShowChatRoomDisplayName;
- (BOOL)isShowHeadImgInMsg;
- (BOOL)isShowLinkedIn;
- (BOOL)isShowToolBarInMsg;
- (BOOL)isSupportPublicWifi;
- (BOOL)isVerified;
- (BOOL)isVerifiedBrandContact;
@property(retain, nonatomic) ChatRoomData *m_ChatRoomData; // @synthesize m_ChatRoomData;
@property(retain, nonatomic) ChatRoomDetail *m_ChatRoomDetail; // @synthesize m_ChatRoomDetail;
@property(retain, nonatomic) NSArray *m_arrPhoneItem; // @synthesize m_arrPhoneItem;
@property(readonly, nonatomic) NSDictionary *m_dicWeiDianInfo; // @synthesize m_dicWeiDianInfo=_m_dicWeiDianInfo;
@property(nonatomic) int m_iWCFlag; // @synthesize m_iWCFlag;
@property(nonatomic) BOOL m_isExtInfoValid; // @synthesize m_isExtInfoValid;
@property(nonatomic) BOOL m_isShowRedDot; // @synthesize m_isShowRedDot;
@property(retain, nonatomic) NSString *m_nsBrandIconUrl; // @synthesize m_nsBrandIconUrl;
@property(retain, nonatomic) NSString *m_nsBrandSubscriptConfigUrl; // @synthesize m_nsBrandSubscriptConfigUrl;
@property(retain, nonatomic) NSString *m_nsCardUrl; // @synthesize m_nsCardUrl;
@property(retain, nonatomic) NSString *m_nsCertificationInfo; // @synthesize m_nsCertificationInfo;
@property(retain, nonatomic) NSString *m_nsChatRoomData; // @synthesize m_nsChatRoomData;
@property(retain, nonatomic) NSString *m_nsChatRoomMemList; // @synthesize m_nsChatRoomMemList;
@property(retain, nonatomic) NSString *m_nsCity; // @synthesize m_nsCity;
@property(retain, nonatomic) NSString *m_nsCountry; // @synthesize m_nsCountry;
@property(retain, nonatomic) NSString *m_nsDescription; // @synthesize m_nsDescription;
@property(retain, nonatomic) NSString *m_nsExternalInfo; // @synthesize m_nsExternalInfo;
@property(retain, nonatomic) NSString *m_nsFBID; // @synthesize m_nsFBID;
@property(retain, nonatomic) NSString *m_nsFBNickName; // @synthesize m_nsFBNickName;
@property(retain, nonatomic) NSString *m_nsLabelIDList; // @synthesize m_nsLabelIDList;
@property(retain, nonatomic) NSString *m_nsLinkedInID; // @synthesize m_nsLinkedInID;
@property(retain, nonatomic) NSString *m_nsLinkedInName; // @synthesize m_nsLinkedInName;
@property(retain, nonatomic) NSString *m_nsLinkedInPublicUrl; // @synthesize m_nsLinkedInPublicUrl;
@property(retain, nonatomic) NSString *m_nsMobileFullHash; // @synthesize m_nsMobileFullHash;
@property(retain, nonatomic) NSString *m_nsMobileHash; // @synthesize m_nsMobileHash;
@property(retain, nonatomic) NSString *m_nsOwner; // @synthesize m_nsOwner;
@property(retain, nonatomic) NSString *m_nsProvince; // @synthesize m_nsProvince;
@property(retain, nonatomic) NSString *m_nsSignature; // @synthesize m_nsSignature;
@property(retain, nonatomic) NSString *m_nsWCBGImgObjectID; // @synthesize m_nsWCBGImgObjectID;
@property(retain, nonatomic) NSString *m_nsWeiDianInfo; // @synthesize m_nsWeiDianInfo;
@property(retain, nonatomic) NSString *m_nsWeiboAddress; // @synthesize m_nsWeiboAddress;
@property(retain, nonatomic) NSString *m_nsWeiboNickName; // @synthesize m_nsWeiboNickName;
@property(retain, nonatomic) NSString *m_nsWorkID; // @synthesize m_nsWorkID;
@property(retain, nonatomic) NSString *m_pcWCBGImgID; // @synthesize m_pcWCBGImgID;
@property(retain, nonatomic) SubscriptBrandInfo *m_subBrandInfo; // @synthesize m_subBrandInfo;
@property(nonatomic) unsigned long m_uiBrandSubscriptionSettings; // @synthesize m_uiBrandSubscriptionSettings;
@property(nonatomic) unsigned long m_uiCertificationFlag; // @synthesize m_uiCertificationFlag;
@property(nonatomic) unsigned long m_uiChatRoomMaxCount; // @synthesize m_uiChatRoomMaxCount;
@property(nonatomic) unsigned long m_uiChatRoomStatus; // @synthesize m_uiChatRoomStatus;
@property(nonatomic) unsigned long m_uiChatRoomVersion; // @synthesize m_uiChatRoomVersion;
@property(nonatomic) unsigned long m_uiDeleteFlag; // @synthesize m_uiDeleteFlag;
@property(nonatomic) unsigned long m_uiNeedUpdate; // @synthesize m_uiNeedUpdate;
@property(nonatomic) unsigned long m_uiWeiboFlag; // @synthesize m_uiWeiboFlag;
- (BOOL)needShowUnreadCountOnSession;
- (void)setChatRoomDataWithoutEmojiChange:(id)arg1;
- (void)setChatStatusNotifyOpen:(BOOL)arg1;
- (void)setExternalInfoJSONCache:(id)arg1;
- (void)setSignatureWithoutEmojiChange:(id)arg1;
- (void)tryLoadExtInfo;
- (void)updateWithBizAttrChanged:(id)arg1;
- (id)xmlForMessageWrapContent;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

