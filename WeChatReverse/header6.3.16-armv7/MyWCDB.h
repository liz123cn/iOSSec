//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class WCDataBase, WCDataBaseTable;

@interface MyWCDB : NSObject
{
    WCDataBase *m_db;
    WCDataBaseTable *m_tableDataItem;
    WCDataBaseTable *m_tableMessage;
    WCDataBaseTable *m_tableStrangerMessage;
    WCDataBaseTable *m_tableTimeline;
    WCDataBaseTable *m_tableHomePage;
    WCDataBaseTable *m_tableBgImgLiked;
    WCDataBaseTable *m_tableIdOwner;
}

- (void).cxx_destruct;
- (BOOL)CreateBgImgLiked;
- (BOOL)CreateHomePageTable;
- (BOOL)CreateIdOwner;
- (BOOL)CreateMyWCAttrTable;
- (BOOL)CreateMyWCMessageTable;
- (BOOL)CreateStrangerMessageTable;
- (BOOL)CreateWCIndexTableForUser:(id)arg1;
- (BOOL)CreateWCTimeLineTable;
- (id)WCIndexTableForUserWithTableName:(id)arg1;
- (id)WCIndexTableNameForUser:(id)arg1;
- (id)WCMessageFromDBMessage:(id)arg1;
- (id)WCMessagesFromDBMessages:(id)arg1;
- (BOOL)addNewWCMessage:(id)arg1;
- (BOOL)addStrangerMessage:(id)arg1 toItem:(id)arg2;
- (void)clearAllTables;
- (void)clearAllWCData;
- (void)closeDB;
- (void)closeDBBeforeInit;
- (BOOL)createTables;
- (void)dealloc;
- (BOOL)deleteAllIndexDataForUser:(id)arg1;
- (BOOL)deleteAllMessages;
- (BOOL)deleteAllTimelineTableData;
- (BOOL)deleteMessage:(id)arg1;
- (BOOL)deleteRowInTimelineByItemID:(id)arg1;
- (BOOL)deleteRowInWCIndexForUser:(id)arg1 ByItemID:(id)arg2;
- (BOOL)deleteWCDataItemByItemID:(id)arg1;
- (id)getAllWCMessages;
- (id)getDataItemDictionaryFromTable:(id)arg1 arrayItemID:(id)arg2;
- (id)getDataItemListFromTable:(id)arg1 afterItemID:(id)arg2 limit:(unsigned long)arg3;
- (id)getDataItemsByIds:(id)arg1;
- (int)getHomepageTotalCount:(id)arg1;
- (id)getLatestDataItem:(id)arg1;
- (id)getLatestMessage;
- (id)getLatestReadMessage;
- (id)getLatestTimelineRowDataInTable:(id)arg1;
- (int)getMaxGroupHintInTable:(id)arg1;
- (id)getMaxID;
- (id)getOwnerByItemID:(id)arg1;
- (id)getRawWCMessagesForClearLimit:(unsigned long)arg1 unReadOnly:(BOOL)arg2;
- (id)getStrangerMessagesOfItem:(id)arg1 partner:(id)arg2;
- (id)getTimelineRowDataByTtemID:(id)arg1 InTable:(id)arg2;
- (unsigned long)getUnReadMessageCount;
- (id)getUnReadMessagesLimit:(unsigned long)arg1;
- (id)getUnreadWCMessages;
- (id)getWCDataItemByItemID:(id)arg1;
- (id)getWCIndexDataItemListForUser:(id)arg1 AfterItemID:(id)arg2 andMaxCount:(int)arg3;
- (id)getWCIndexDataItemListForUser:(id)arg1 withItemID:(id)arg2;
- (id)getWCMessage:(id)arg1;
- (id)getWCMessagesFrom:(id)arg1 maxCount:(unsigned long)arg2;
- (id)getWCTimeLineDataItemDictionaryByArrayItemID:(id)arg1;
- (id)getWCTimeLineDataItemListAfterItemID:(id)arg1 andMaxCount:(int)arg2;
- (id)getWCTimeLineDataItemListOfLatest:(int)arg1;
- (id)getWCTimeLineDataItemWithItemID:(id)arg1;
- (id)init;
- (BOOL)initDB;
- (id)internalCreateTimelineTable:(id)arg1;
- (BOOL)isBGImgLiked:(id)arg1 username:(id)arg2;
@property(retain, nonatomic) WCDataBase *m_db; // @synthesize m_db;
@property(retain, nonatomic) WCDataBaseTable *m_tableBgImgLiked; // @synthesize m_tableBgImgLiked;
@property(retain, nonatomic) WCDataBaseTable *m_tableDataItem; // @synthesize m_tableDataItem;
@property(retain, nonatomic) WCDataBaseTable *m_tableHomePage; // @synthesize m_tableHomePage;
@property(retain, nonatomic) WCDataBaseTable *m_tableIdOwner; // @synthesize m_tableIdOwner;
@property(retain, nonatomic) WCDataBaseTable *m_tableMessage; // @synthesize m_tableMessage;
@property(retain, nonatomic) WCDataBaseTable *m_tableStrangerMessage; // @synthesize m_tableStrangerMessage;
@property(retain, nonatomic) WCDataBaseTable *m_tableTimeline; // @synthesize m_tableTimeline;
- (void)reloadDatabase;
- (BOOL)setAllWCMessagesRead;
- (void)setBGImgLiked:(id)arg1 username:(id)arg2;
- (BOOL)setHomepageTotalCount:(int)arg1 username:(id)arg2;
- (BOOL)setOwner:(id)arg1 withItemID:(id)arg2;
- (BOOL)setWCDataItem:(id)arg1 forItemID:(id)arg2;
- (BOOL)setWCMessageListRead:(id)arg1;
- (BOOL)setWCMessageRead:(id)arg1;
- (BOOL)setWcMessageAllReadBeginWithId:(unsigned long)arg1;
- (id)tryGetDataItemByItemID:(id)arg1;
- (BOOL)updateAllCacheWithDataItem:(id)arg1 useTransaction:(BOOL)arg2;
- (void)updateMsgDelStat:(BOOL)arg1 forAdSns:(id)arg2;
- (void)updateMsgDelStat:(BOOL)arg1 forAdSnsObj:(id)arg2 timeLimit:(unsigned int)arg3;
- (void)updateMsgDelStat:(BOOL)arg1 forMsg:(id)arg2 timeLimit:(unsigned int)arg3;
- (void)updateMsgDelStat:(BOOL)arg1 forMsgs:(id)arg2;
- (void)updateMsgDelStat:(BOOL)arg1 forSns:(id)arg2;
- (void)updateMsgDelStat:(BOOL)arg1 forSnsObjID:(unsigned long long)arg2 timeLimit:(unsigned int)arg3;
- (BOOL)updateTable:(id)arg1 WithDatas:(id)arg2 AfterItemID:(id)arg3;
- (BOOL)updateTable:(id)arg1 WithDatas:(id)arg2 AfterItemID:(id)arg3 ToItemID:(id)arg4;
- (BOOL)updateWCIndexForUser:(id)arg1 WithDatas:(id)arg2 AfterItemID:(id)arg3;
- (BOOL)updateWCIndexForUser:(id)arg1 WithDatas:(id)arg2 AfterItemID:(id)arg3 ToItemID:(id)arg4;
- (BOOL)updateWCTimeLineTableWithChangedDatas:(id)arg1;
- (BOOL)updateWCTimeLineTableWithDatas:(id)arg1 AfterItemID:(id)arg2;

@end

